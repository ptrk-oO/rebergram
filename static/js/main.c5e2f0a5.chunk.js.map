{"version":3,"sources":["stateMachine.js","logo.svg","App.js","reportWebVitals.js","index.js"],"names":["require","init","transitions","name","from","to","methods","onMelt","console","log","onFreeze","onVaporize","onCondense","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0FAEY,IAFOA,EAAQ,IAEf,CAAiB,CACzBC,KAAM,QACNC,YAAa,CACX,CAAEC,KAAM,OAAYC,KAAM,QAAUC,GAAI,UACxC,CAAEF,KAAM,SAAYC,KAAM,SAAUC,GAAI,SACxC,CAAEF,KAAM,WAAYC,KAAM,SAAUC,GAAI,OACxC,CAAEF,KAAM,WAAYC,KAAM,MAAUC,GAAI,WAE1CC,QAAS,CACPC,OAAY,WAAaC,QAAQC,IAAI,aACrCC,SAAY,WAAaF,QAAQC,IAAI,YACrCE,WAAY,WAAaH,QAAQC,IAAI,gBACrCG,WAAY,WAAaJ,QAAQC,IAAI,oB,mFCd5B,I,iBCcAI,MAVf,WACE,OACE,qBAAKC,UAAU,aAAf,SACE,wBAAQA,UAAU,aAAlB,SACL,sCCIcC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.c5e2f0a5.chunk.js","sourcesContent":["var StateMachine = require('javascript-state-machine');\n\n  var fsm = new StateMachine({\n    init: 'solid',\n    transitions: [\n      { name: 'melt',     from: 'solid',  to: 'liquid' },\n      { name: 'freeze',   from: 'liquid', to: 'solid'  },\n      { name: 'vaporize', from: 'liquid', to: 'gas'    },\n      { name: 'condense', from: 'gas',    to: 'liquid' }\n    ],\n    methods: {\n      onMelt:     function() { console.log('I melted')    },\n      onFreeze:   function() { console.log('I froze')     },\n      onVaporize: function() { console.log('I vaporized') },\n      onCondense: function() { console.log('I condensed') }\n    }\n  });\n\n","export default __webpack_public_path__ + \"static/media/logo.b64aada2.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport stateMachine from './stateMachine.js';\n\nfunction App() {\n  return (\n    <div className=\"App-header\">\n      <header className=\"App-header\">\n\t<stateMachine />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}